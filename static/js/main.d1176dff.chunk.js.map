{"version":3,"sources":["pages/Home/styles.ts","services/api.ts","util/format.ts","hooks/useCart.tsx","pages/Home/index.tsx","pages/Cart/styles.ts","pages/Cart/index.tsx","routes.tsx","assets/images/background.svg","styles/global.ts","assets/images/logo.svg","components/Header/styles.ts","components/Header/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ProductList","styled","ul","darken","api","axios","create","baseURL","formatPrice","Intl","NumberFormat","style","currency","format","CartContext","createContext","CartProvider","children","useState","storagedCart","localStorage","getItem","JSON","parse","cart","setCart","prevCartRef","useRef","useEffect","current","cartPreviousValue","setItem","stringify","addProduct","productId","a","updatedCart","productExists","find","product","id","get","stockAmount","data","amount","currentAmount","toast","error","newProduct","push","updateProductAmount","stock","Error","Provider","value","removeProduct","productIndex","findIndex","splice","useCart","useContext","Home","products","setProducts","cartItemsAmount","reduce","sumAmount","newSumAmount","productsList","map","priceFormatted","price","loadProducts","src","image","alt","title","type","onClick","size","color","Container","div","ProductTable","table","lighten","Total","Cart","cartFormatted","subTotal","total","sumTotal","disabled","handleProductDecrement","readOnly","handleProductIncrement","Routes","path","exact","component","createGlobalStyle","background","header","Link","Header","cartSize","length","to","logo","App","autoClose","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d1176dff.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\nimport { darken } from \"polished\";\r\n\r\nexport const ProductList = styled.ul`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(272px, 1fr));\r\n  gap: 1rem;\r\n  list-style: none;\r\n\r\n  li {\r\n    display: flex;\r\n    flex-direction: column;\r\n    background: #fff;\r\n    border-radius: 4px;\r\n    padding: 1rem;\r\n\r\n    img {\r\n      align-self: center;\r\n      max-width: 250px;\r\n    }\r\n\r\n    @media (max-width: 720px) {\r\n      img {\r\n        align-self: center;\r\n        max-width: 200px;\r\n      }\r\n    }\r\n\r\n    > strong {\r\n      font-size: 16px;\r\n      line-height: 20px;\r\n      color: #333;\r\n      margin-top: 5px;\r\n    }\r\n\r\n    > span {\r\n      font-size: 21px;\r\n      font-weight: bold;\r\n      margin: 5px 0 20px;\r\n    }\r\n\r\n    button {\r\n      background: #7159c1;\r\n      color: #fff;\r\n      border: 0;\r\n      border-radius: 4px;\r\n      overflow: hidden;\r\n      margin-top: auto;\r\n\r\n      display: flex;\r\n      align-items: center;\r\n      transition: background 0.2s;\r\n\r\n      &:hover {\r\n        background: ${darken(0.06, \"#7159c1\")};\r\n      }\r\n\r\n      div {\r\n        display: flex;\r\n        align-items: center;\r\n        padding: 12px;\r\n        background: rgba(0, 0, 0, 0.1);\r\n\r\n        svg {\r\n          margin-right: 5px;\r\n        }\r\n      }\r\n\r\n      span {\r\n        flex: 1;\r\n        text-align: center;\r\n        font-weight: bold;\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import axios from 'axios';\r\n\r\nexport const api = axios.create({\r\n  baseURL: 'http://localhost:3333',\r\n});\r\n","export const { format: formatPrice } = new Intl.NumberFormat('pt-br', {\r\n  style: 'currency',\r\n  currency: 'BRL',\r\n});\r\n","import {\r\n  createContext,\r\n  ReactNode,\r\n  useContext,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport { api } from \"../services/api\";\r\nimport { Product } from \"../types\";\r\n\r\ninterface CartProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\ninterface UpdateProductAmount {\r\n  productId: number;\r\n  amount: number;\r\n}\r\n\r\ninterface CartContextData {\r\n  cart: Product[];\r\n  addProduct: (productId: number) => Promise<void>;\r\n  removeProduct: (productId: number) => void;\r\n  updateProductAmount: ({ productId, amount }: UpdateProductAmount) => void;\r\n}\r\n\r\nconst CartContext = createContext<CartContextData>({} as CartContextData);\r\n\r\nexport function CartProvider({ children }: CartProviderProps): JSX.Element {\r\n  const [cart, setCart] = useState<Product[]>(() => {\r\n    const storagedCart = localStorage.getItem(\"@RocketShoes:cart\");\r\n\r\n    if (storagedCart) {\r\n      return JSON.parse(storagedCart);\r\n    }\r\n\r\n    return [];\r\n  });\r\n\r\n  const prevCartRef = useRef<Product[]>();\r\n\r\n  useEffect(() => {\r\n    prevCartRef.current = cart;\r\n  });\r\n\r\n  const cartPreviousValue = prevCartRef.current ?? cart;\r\n\r\n  useEffect(() => {\r\n    if (cartPreviousValue !== cart) {\r\n      localStorage.setItem(\"@RocketShoes:cart\", JSON.stringify(cart));\r\n    }\r\n  }, [cart, cartPreviousValue]);\r\n\r\n  const addProduct = async (productId: number) => {\r\n    try {\r\n      const updatedCart = [...cart];\r\n      const productExists = updatedCart.find(\r\n        (product) => product.id === productId\r\n      );\r\n\r\n      const stockAmount = (\r\n        await api.get<UpdateProductAmount>(`/stock/${productId}`)\r\n      ).data.amount;\r\n      const currentAmount = productExists ? productExists.amount : 0;\r\n      const amount = currentAmount + 1;\r\n\r\n      if (amount > stockAmount) {\r\n        toast.error(\"Quantidade solicitada fora de estoque\");\r\n        return;\r\n      }\r\n\r\n      if (productExists) {\r\n        productExists.amount = amount;\r\n      } else {\r\n        const product = await (await api.get(`/products/${productId}`)).data;\r\n\r\n        const newProduct = {\r\n          ...product,\r\n          amount: 1,\r\n        };\r\n        updatedCart.push(newProduct);\r\n      }\r\n\r\n      setCart(updatedCart);\r\n    } catch {\r\n      toast.error(\"Erro na adição do produto\");\r\n    }\r\n  };\r\n\r\n  const removeProduct = (productId: number) => {\r\n    try {\r\n      const updatedCart = [...cart];\r\n      const productIndex = updatedCart.findIndex(\r\n        (product) => product.id === productId\r\n      );\r\n\r\n      if (productIndex >= 0) {\r\n        updatedCart.splice(productIndex, 1);\r\n\r\n        setCart(updatedCart);\r\n      } else {\r\n        throw Error();\r\n      }\r\n    } catch {\r\n      toast.error(\"Erro na remoção do produto\");\r\n    }\r\n  };\r\n\r\n  const updateProductAmount = async ({\r\n    productId,\r\n    amount,\r\n  }: UpdateProductAmount) => {\r\n    try {\r\n      if (amount <= 0) {\r\n        return;\r\n      }\r\n\r\n      const stock = await api.get(`/stock/${productId}`);\r\n      const stockAmount = stock.data.amount;\r\n\r\n      if (amount > stockAmount) {\r\n        toast.error(\"Quantidade solicitade fora de estoque\");\r\n        return;\r\n      }\r\n\r\n      const updatedCart = [...cart];\r\n      const productExists = updatedCart.find(\r\n        (product) => product.id === productId\r\n      );\r\n\r\n      if (productExists) {\r\n        productExists.amount = amount;\r\n        setCart(updatedCart);\r\n      } else {\r\n        throw Error();\r\n      }\r\n    } catch {\r\n      toast.error(\"Erro na alteração de quantidade do produto\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider\r\n      value={{ cart, addProduct, removeProduct, updateProductAmount }}\r\n    >\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useCart(): CartContextData {\r\n  const context = useContext(CartContext);\r\n\r\n  return context;\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { MdAddShoppingCart } from \"react-icons/md\";\r\n\r\nimport { ProductList } from \"./styles\";\r\nimport { api } from \"../../services/api\";\r\nimport { formatPrice } from \"../../util/format\";\r\nimport { useCart } from \"../../hooks/useCart\";\r\n\r\ninterface Product {\r\n  id: number;\r\n  title: string;\r\n  price: number;\r\n  image: string;\r\n}\r\n\r\ninterface ProductFormatted extends Product {\r\n  priceFormatted: string;\r\n}\r\n\r\ninterface CartItemsAmount {\r\n  [key: number]: number;\r\n}\r\n\r\nconst Home = (): JSX.Element => {\r\n  const [products, setProducts] = useState<ProductFormatted[]>([]);\r\n  const { addProduct, cart } = useCart();\r\n\r\n  const cartItemsAmount = cart.reduce((sumAmount, product) => {\r\n    const newSumAmount = { ...sumAmount };\r\n    newSumAmount[product.id] = product.amount;\r\n\r\n    return newSumAmount;\r\n  }, {} as CartItemsAmount);\r\n\r\n  useEffect(() => {\r\n    async function loadProducts() {\r\n      const productsList = (await api.get<Product[]>(\"/products\")).data;\r\n\r\n      const data = productsList.map((product) => ({\r\n        ...product,\r\n        priceFormatted: formatPrice(product.price),\r\n      }));\r\n\r\n      setProducts(data);\r\n    }\r\n\r\n    loadProducts();\r\n  }, []);\r\n\r\n  function handleAddProduct(id: number) {\r\n    addProduct(id);\r\n  }\r\n\r\n  return (\r\n    <ProductList>\r\n      {products.map((product) => (\r\n        <li key={product.id}>\r\n          <img src={product.image} alt={product.title} />\r\n          <strong>{product.title}</strong>\r\n          <span>{product.priceFormatted}</span>\r\n          <button\r\n            type=\"button\"\r\n            data-testid=\"add-product-button\"\r\n            onClick={() => handleAddProduct(product.id)}\r\n          >\r\n            <div data-testid=\"cart-product-quantity\">\r\n              <MdAddShoppingCart size={16} color=\"#FFF\" />\r\n              {cartItemsAmount[product.id] || 0}\r\n            </div>\r\n\r\n            <span>ADICIONAR AO CARRINHO</span>\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ProductList>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import styled from \"styled-components\";\r\nimport { darken, lighten } from \"polished\";\r\n\r\nexport const Container = styled.div`\r\n  padding: 30px;\r\n  background: #fff;\r\n  border-radius: 4px;\r\n\r\n  footer {\r\n    margin-top: 30px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n\r\n    button {\r\n      background: #7159c1;\r\n      color: #fff;\r\n      border: 0;\r\n      border-radius: 4px;\r\n      padding: 12px 20px;\r\n      font-weight: bold;\r\n      text-transform: uppercase;\r\n      transition: background 0.2s;\r\n\r\n      &:hover {\r\n        background: ${darken(0.06, \"#7159c1\")};\r\n      }\r\n    }\r\n  }\r\n  @media (max-width: 720px) {\r\n    footer {\r\n      flex-direction: column;\r\n\r\n      button {\r\n        order: 1;\r\n        margin-top: 1rem;\r\n        width: 100%;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ProductTable = styled.table`\r\n  width: 100%;\r\n\r\n  thead th {\r\n    color: #999;\r\n    text-align: left;\r\n    padding: 12px;\r\n  }\r\n\r\n  tbody td {\r\n    padding: 12px;\r\n    border-bottom: 1px solid #eee;\r\n  }\r\n\r\n  img {\r\n    height: 100px;\r\n  }\r\n\r\n  strong {\r\n    color: #333;\r\n    display: block;\r\n  }\r\n\r\n  span {\r\n    display: block;\r\n    margin-top: 5px;\r\n    font-size: 18px;\r\n    font-weight: bold;\r\n  }\r\n\r\n  div {\r\n    display: flex;\r\n    align-items: center;\r\n\r\n    input {\r\n      border: 1px solid #ddd;\r\n      border-radius: 4px;\r\n      color: #666;\r\n      padding: 6px;\r\n      width: 50px;\r\n    }\r\n  }\r\n\r\n  button {\r\n    background: none;\r\n    border: 0;\r\n    padding: 6px;\r\n\r\n    svg {\r\n      color: #7159c1;\r\n      transition: color 0.2s;\r\n    }\r\n\r\n    &:hover {\r\n      svg {\r\n        color: ${darken(0.06, \"#7159c1\")};\r\n      }\r\n    }\r\n\r\n    &:disabled {\r\n      svg {\r\n        color: ${lighten(0.25, \"#7159c1\")};\r\n        cursor: not-allowed;\r\n      }\r\n    }\r\n  }\r\n\r\n  @media (max-width: 720px) {\r\n    display: flex;\r\n\r\n    thead,\r\n    tbody,\r\n    th,\r\n    td,\r\n    tr {\r\n      display: block;\r\n    }\r\n\r\n    thead {\r\n      position: absolute;\r\n      top: -9999px;\r\n      left: -9999px;\r\n      width: 0;\r\n    }\r\n\r\n    tbody {\r\n      width: 100%;\r\n\r\n      tr {\r\n        display: grid;\r\n        place-items: center;\r\n        border-bottom: 1px solid #333;\r\n\r\n        td {\r\n          padding: 0 0 0.75rem;\r\n          border: 0;\r\n          text-align: center;\r\n\r\n          strong {\r\n            font-size: 1.25rem;\r\n          }\r\n\r\n          img {\r\n            height: auto;\r\n            width: 100%;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Total = styled.div`\r\n  display: flex;\r\n  align-items: baseline;\r\n\r\n  span {\r\n    color: #999;\r\n    font-weight: bold;\r\n  }\r\n\r\n  strong {\r\n    font-size: 28px;\r\n    margin-left: 5px;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport {\r\n  MdDelete,\r\n  MdAddCircleOutline,\r\n  MdRemoveCircleOutline,\r\n} from \"react-icons/md\";\r\n\r\nimport { useCart } from \"../../hooks/useCart\";\r\nimport { formatPrice } from \"../../util/format\";\r\nimport { Container, ProductTable, Total } from \"./styles\";\r\n\r\ninterface Product {\r\n  id: number;\r\n  title: string;\r\n  price: number;\r\n  image: string;\r\n  amount: number;\r\n}\r\n\r\nconst Cart = (): JSX.Element => {\r\n  const { cart, removeProduct, updateProductAmount } = useCart();\r\n\r\n  const cartFormatted = cart.map((product) => ({\r\n    ...product,\r\n    priceFormatted: formatPrice(product.price),\r\n    subTotal: formatPrice(product.price * product.amount),\r\n  }));\r\n\r\n  const total = formatPrice(\r\n    cart.reduce((sumTotal, product) => {\r\n      sumTotal += product.price * product.amount;\r\n      return sumTotal;\r\n    }, 0)\r\n  );\r\n\r\n  function handleProductIncrement(product: Product) {\r\n    updateProductAmount({ productId: product.id, amount: product.amount + 1 });\r\n  }\r\n\r\n  function handleProductDecrement(product: Product) {\r\n    updateProductAmount({ productId: product.id, amount: product.amount - 1 });\r\n  }\r\n\r\n  function handleRemoveProduct(productId: number) {\r\n    removeProduct(productId);\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <ProductTable>\r\n        <thead>\r\n          <tr>\r\n            <th aria-label=\"product image\" />\r\n            <th>PRODUTO</th>\r\n            <th>QTD</th>\r\n            <th>SUBTOTAL</th>\r\n            <th aria-label=\"delete icon\" />\r\n          </tr>\r\n        </thead>\r\n\r\n        <tbody>\r\n          {cartFormatted.map((product) => (\r\n            <tr key={product.id} data-testid=\"product\">\r\n              <td>\r\n                <img src={product.image} alt={product.title} />\r\n              </td>\r\n              <td>\r\n                <strong>{product.title}</strong>\r\n                <span>{formatPrice(product.price)}</span>\r\n              </td>\r\n              <td>\r\n                <div>\r\n                  <button\r\n                    type=\"button\"\r\n                    data-testid=\"decrement-product\"\r\n                    disabled={product.amount <= 1}\r\n                    onClick={() => handleProductDecrement(product)}\r\n                  >\r\n                    <MdRemoveCircleOutline size={20} />\r\n                  </button>\r\n                  <input\r\n                    type=\"text\"\r\n                    data-testid=\"product-amount\"\r\n                    readOnly\r\n                    value={product.amount}\r\n                  />\r\n                  <button\r\n                    type=\"button\"\r\n                    data-testid=\"increment-product\"\r\n                    onClick={() => handleProductIncrement(product)}\r\n                  >\r\n                    <MdAddCircleOutline size={20} />\r\n                  </button>\r\n                </div>\r\n              </td>\r\n              <td>\r\n                <strong>{product.subTotal}</strong>\r\n              </td>\r\n              <td>\r\n                <button\r\n                  type=\"button\"\r\n                  data-testid=\"remove-product\"\r\n                  onClick={() => handleRemoveProduct(product.id)}\r\n                >\r\n                  <MdDelete size={20} />\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </ProductTable>\r\n\r\n      <footer>\r\n        <button type=\"button\">Finalizar pedido</button>\r\n\r\n        <Total>\r\n          <span>TOTAL</span>\r\n          <strong>{total}</strong>\r\n        </Total>\r\n      </footer>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n","import { Switch, Route } from 'react-router-dom';\r\n\r\nimport Home from './pages/Home';\r\nimport Cart from './pages/Cart';\r\n\r\nconst Routes = (): JSX.Element => {\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/\" exact component={Home} />\r\n      <Route path=\"/cart\" component={Cart} />\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","export default __webpack_public_path__ + \"static/media/background.72f221ea.svg\";","import { createGlobalStyle } from \"styled-components\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nimport background from \"../assets/images/background.svg\";\r\n\r\nexport default createGlobalStyle`\r\n  * {\r\n    margin: 0;\r\n    padding: 0;\r\n    outline: 0;\r\n    box-sizing: border-box;\r\n  }\r\n\r\n  @media (max-width: 1080px) {\r\n    html {\r\n      font-size: 93.75%;\r\n    }\r\n  }\r\n\r\n  @media (max-width: 720px) {\r\n    html {\r\n      font-size: 87.5%;\r\n    }\r\n  }\r\n\r\n  body {\r\n    background: #191920 url(${background}) no-repeat center top;\r\n    -webkit-font-smoothing: antialiased;\r\n  }\r\n\r\n  body, input, button {\r\n    font: 14px Roboto, sans-serif;\r\n  }\r\n\r\n  #root {\r\n    max-width: 1020px;\r\n    margin: 0 auto;\r\n    padding: 0 20px 50px;\r\n  }\r\n\r\n  button {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n","export default __webpack_public_path__ + \"static/media/logo.a865163d.svg\";","import styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const Container = styled.header`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin: 2rem 0;\r\n\r\n  a {\r\n    transition: opacity 0.2s;\r\n\r\n    &:hover {\r\n      opacity: 0.7;\r\n    }\r\n\r\n    @media (max-width: 480px) {\r\n      img {\r\n        max-width: 45vw;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Cart = styled(Link)`\r\n  display: flex;\r\n  align-items: center;\r\n  text-decoration: none;\r\n\r\n  div {\r\n    text-align: right;\r\n    margin-right: 10px;\r\n\r\n    strong {\r\n      display: block;\r\n      color: #fff;\r\n    }\r\n\r\n    span {\r\n      font-size: 12px;\r\n      color: #999;\r\n    }\r\n\r\n    @media (max-width: 480px) {\r\n      margin-right: 6px;\r\n\r\n      strong {\r\n        display: none;\r\n      }\r\n\r\n      span {\r\n        font-size: 10px;\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { MdShoppingBasket } from \"react-icons/md\";\r\n\r\nimport logo from \"../../assets/images/logo.svg\";\r\nimport { Container, Cart } from \"./styles\";\r\nimport { useCart } from \"../../hooks/useCart\";\r\n\r\nconst Header = (): JSX.Element => {\r\n  const { cart } = useCart();\r\n  const cartSize = cart.length;\r\n\r\n  return (\r\n    <Container>\r\n      <Link to=\"/\">\r\n        <img src={logo} alt=\"Rocketshoes\" />\r\n      </Link>\r\n\r\n      <Cart to=\"/cart\">\r\n        <div>\r\n          <strong>Meu carrinho</strong>\r\n          <span data-testid=\"cart-size\">\r\n            {cartSize === 1 ? `${cartSize} item` : `${cartSize} itens`}\r\n          </span>\r\n        </div>\r\n        <MdShoppingBasket size={36} color=\"#FFF\" />\r\n      </Cart>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { ToastContainer } from 'react-toastify';\r\n\r\nimport Routes from './routes';\r\nimport GlobalStyles from './styles/global';\r\nimport Header from './components/Header';\r\nimport { CartProvider } from './hooks/useCart';\r\n\r\nconst App = (): JSX.Element => {\r\n  return (\r\n    <BrowserRouter>\r\n      <CartProvider>\r\n        <GlobalStyles />\r\n        <Header />\r\n        <Routes />\r\n        <ToastContainer autoClose={3000} />\r\n      </CartProvider>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}